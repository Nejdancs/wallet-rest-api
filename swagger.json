{
    "openapi": "3.0.1",
    "info": {
        "version": "0.0.1",
        "title": "Wallet",
        "description": "[ Base URL: https://wallet-test.onrender.com/ ]"
    },
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "servers": [{ "url": "https://wallet-test.onrender.com" }, { "url": "http://localhost:3001/" }],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "Users",
            "description": "Users endpoints"
        },
        {
            "name": "Currency",
            "description": "Currency endpoints"
        }
    ],
    "paths": {
        "/api/auth/signup": {
            "post": {
                "tags": ["Auth"],
                "summary": "User registration",
                "parameters": [],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationBadRequest"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Provided email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationConflict"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "Logs user into the system",
                "parameters": [],
                "requestBody": {
                    "description": "Login's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginBadRequest"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Email or password is wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginUnauthorized"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "Logs out current logged in user session",
                "parameters": [],
                "security": [{ "Bearer": [] }],

                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogOutUnauthorized"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/current": {
            "get": {
                "tags": ["Users"],
                "summary": "Get current user",
                "parameters": [],
                "security": [{ "Bearer": [] }],

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token expired or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserInvalidToken"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/currency": {
            "get": {
                "tags": ["Currency"],
                "summary": "Get currency",
                "parameters": [],

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Chuck"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    }
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "success"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 201
                    },
                    "data": {
                        "type": "object",

                        "properties": {
                            "token": {
                                "type": "string",
                                "description": "Access token"
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "User name",
                                        "example": "Chuck"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "User's email",
                                        "format": "email"
                                    },
                                    "balance": {
                                        "type": "integer",
                                        "description": "User's balance",
                                        "example": 0
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "RegistrationBadRequest": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "error"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 400
                    },
                    "message": {
                        "type": "string",
                        "description": "error message",
                        "example": "Please fill a valid password"
                    }
                }
            },
            "RegistrationConflict": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "error"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 409
                    },
                    "message": {
                        "type": "string",
                        "description": "error message",
                        "example": "User with example@gmail.com already exist"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "success"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 200
                    },
                    "data": {
                        "type": "object",

                        "properties": {
                            "token": {
                                "type": "string",
                                "description": "Access token"
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "User name",
                                        "example": "Chuck"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "User's email",
                                        "format": "email"
                                    },
                                    "balance": {
                                        "type": "integer",
                                        "description": "User's balance",
                                        "example": 0
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "LoginBadRequest": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "error"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 400
                    },
                    "message": {
                        "type": "string",
                        "description": "error message",
                        "example": "Please fill a valid email address"
                    }
                }
            },
            "LoginUnauthorized": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "error"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 401
                    },
                    "message": {
                        "type": "string",
                        "description": "error message",
                        "example": "Email or password is wrong"
                    }
                }
            },
            "LogOutUnauthorized": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "error"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 401
                    },
                    "message": {
                        "type": "string",
                        "description": "error message",
                        "example": "Not authorized"
                    }
                }
            },
            "CurrentUserResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "success"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 200
                    },
                    "data": {
                        "type": "object",

                        "properties": {
                            "user": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "User name",
                                        "example": "Chuck"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "User's email",
                                        "format": "email"
                                    },
                                    "balance": {
                                        "type": "integer",
                                        "description": "User's balance",
                                        "example": 0
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CurrentUserInvalidToken": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "error"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 401
                    },
                    "message": {
                        "type": "string",
                        "description": "error message",
                        "example": "jwt expired"
                    }
                }
            },
            "CurrencyResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "success"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 200
                    },
                    "data": {
                        "type": "object",

                        "properties": {
                            "currency": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "currencyA": {
                                            "type": "string",
                                            "description": "currencyA",
                                            "example": "EUR"
                                        },
                                        "currencyB": {
                                            "type": "string",
                                            "description": "currencyB",
                                            "example": "UAH"
                                        },
                                        "rateBuy": {
                                            "type": "string",
                                            "description": "buy",
                                            "example": "38.35"
                                        },
                                        "rateSell": {
                                            "type": "string",
                                            "description": "sale",
                                            "example": "39.84"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CurrencyError": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "status",
                        "example": "error"
                    },
                    "code": {
                        "type": "integer",
                        "description": "status code",
                        "example": 500
                    },
                    "message": {
                        "type": "string",
                        "description": "error message",
                        "example": "Server error"
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
